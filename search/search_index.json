{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#cloudkoffer","title":"Cloudkoffer","text":"<p>Work in Progress</p> <p>This website has recently been set up and will gradually be filled with content.</p> <p>With this personal project I would like to show how easy it can be to build a mobile, mainly declarative and self-reproducible bare-metal developer platform based on Kubernetes with simple means. Rapidly deploying a local Kubernetes cluster may be a breeze these days, but when it comes to scaling and building a comprehensive open source developer platform, numerous challenges emerge.</p> <p></p> <p></p> <p></p>"},{"location":"construction/","title":"Index","text":""},{"location":"construction/#construction","title":"Construction","text":""},{"location":"construction/#concept","title":"Concept","text":"Overview"},{"location":"construction/cloudkoffer-v1/","title":"Cloudkoffer v1","text":""},{"location":"construction/cloudkoffer-v1/#cloudkoffer-v1","title":"Cloudkoffer v1","text":"Front view (inner) - 1 Front view (inner) - 2 Top view (inner) Front view (outer) Back view (outer)"},{"location":"construction/cloudkoffer-v1/#case","title":"Case","text":"Aktenkoffer Alumaxx 45188 Mercato <ul> <li>Material: aluminum</li> <li>Color: silver</li> <li>Dimensions: 45.5 x 34 x 11 cm (W x H x D)</li> <li>Weight: 2.2 kg</li> <li>3-digit combination locks</li> <li>Ergonomic carrying handle</li> <li>Detachable and adjustable carrying strap</li> </ul>"},{"location":"construction/cloudkoffer-v1/#router","title":"Router","text":"Ubiquiti EdgeRouter X"},{"location":"construction/cloudkoffer-v1/#port-assignment","title":"Port Assignment","text":"Port Connection eth0 WAN eth1 - eth2 - eth3 - eth4 Switch"},{"location":"construction/cloudkoffer-v1/#switch","title":"Switch","text":"TP-Link TL-SG108 8-Port Gigabit Ethernet Unmanaged Switch"},{"location":"construction/cloudkoffer-v1/#node","title":"Node","text":"Intel NUC Kit NUC6i3SYK"},{"location":"construction/cloudkoffer-v1/#specifications","title":"Specifications","text":"Name Description Type Intel NUC Kit NUC6i3SYB (Specs) UEFI SYSKLi35.86A.0073.2020.0909.1625 Processor Intel Core i3-6100U Base Frequency: 2.30 GHz Cache: 3 MB (L3) Cores/Threads: 2/4 Memory 32 GB - 2x 16 GB (DDR4-2133) Graphics Intel Iris Graphics 520 Mini-DP 1.2 HDMI 1.4b Storage  Samsung SSD 850 Evo 250 GB Networking  Intel Ethernet Connection I219-V Intel Wireless-AC 8260 + Bluetooth 4.2 TDP 15 W Features  SDXC (with UHS-I support)"},{"location":"construction/cloudkoffer-v1/#mac-addresses","title":"MAC Addresses","text":"Name Address Node 1 f4:4d:30:60:70:42 Node 2 f4:4d:30:60:68:db Node 3 f4:4d:30:60:6c:9c Node 4 f4:4d:30:60:6d:0d Node 5 f4:4d:30:60:70:62"},{"location":"construction/cloudkoffer-v1/#uefi","title":"UEFI","text":"Configuration details <ul> <li>Advanced<ul> <li>Main<ul> <li>Default Visual BIOS Start Page &gt; <code>Home Page 1</code></li> <li>Event Log<ul> <li>Clear Event Log &gt; <code>unchecked</code></li> <li>Event Logging &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Devices<ul> <li>USB<ul> <li>USB Configuration<ul> <li>USB Legacy &gt; <code>checked</code></li> <li>Portable Device Charging Mode &gt; <code>Charging in S3/S4/S5</code></li> </ul> </li> <li>USB Ports<ul> <li>USB Port 0x: <code>Enable</code></li> </ul> </li> </ul> </li> <li>SATA<ul> <li>Chipset SATA Controller Configuration<ul> <li>Chipset SATA &gt; <code>checked</code></li> <li>Chipset SATA Mode &gt; <code>AHCI</code></li> <li>S.M.A.R.T &gt; <code>checked</code></li> <li>SATA Port &gt; <code>checked</code></li> <li>Hard Disk Pre-Delay &gt; <code>0</code></li> <li>HDD Activity LED &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Video<ul> <li>Video Configuration</li> <li>IDG Minimum Memory &gt; <code>64 MB</code></li> <li>IDG Aperture Size &gt; <code>256 MB</code></li> <li>IDG Primary Video Port &gt; <code>Auto</code></li> </ul> </li> <li>Onboard Devices<ul> <li>Onboard Device Configuration<ul> <li>Audio &gt; <code>unchecked</code></li> <li>LAN &gt; <code>checked</code></li> <li>WLAN &gt; <code>unchecked</code></li> <li>Bluetooth &gt; <code>unchecked</code></li> <li>SD Card &gt; <code>read/write</code></li> </ul> </li> <li>Legacy Device Configuration<ul> <li>Enhance Consumer IR &gt; <code>unchecked</code></li> <li>High Precision Event Timers &gt; <code>checked</code></li> <li>Num Lock &gt; <code>Checked</code></li> </ul> </li> </ul> </li> <li>PCI<ul> <li>PCI Configuration<ul> <li>PCI Latency Timer &gt; <code>32</code></li> <li>M.2 Slot &gt; <code>checked</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Cooling<ul> <li>CPU Fan Header<ul> <li>Fan Control Mode &gt; <code>Cool</code></li> <li>Minimum Duty Cycle (%) &gt; <code>35</code></li> <li>Primary Temperature Sensor &gt; <code>Processor</code></li> <li>Minimum Temperature (\u00b0C) &gt; <code>71</code></li> <li>Duty Cycle Increment (%/\u00b0C) &gt; <code>2</code></li> <li>Secondary Temperature Sensor &gt; <code>Memory</code></li> <li>Minimum Temperature (\u00b0C) &gt; <code>68</code></li> <li>Duty Cycle Increment (%/\u00b0C) &gt; <code>2</code></li> </ul> </li> </ul> </li> <li>Performance<ul> <li>Processor<ul> <li>Core Settings<ul> <li>Intel Hyper-Threading Technology &gt; <code>checked</code></li> <li>Active Processor Cores &gt; <code>ALL</code></li> <li>Real-Time Performance Tuning &gt; <code>checked</code></li> <li>Silicon Debug Features &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Memory<ul> <li>General Settings<ul> <li>Memory Profiles &gt; <code>Automatic</code></li> <li>Round Trip Latency &gt; <code>checked</code></li> <li>TCR &gt; <code>Disabled</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Security<ul> <li>Password<ul> <li>Supervisor Password &gt; <code>Not installed</code></li> <li>User Password &gt; <code>Not installed</code></li> <li>Master Hard Disk Drive Password &gt; <code>Not installed</code></li> <li>Hard Disk Drive Password &gt; <code>Not installed</code></li> <li>Hard Disk Drive Password Prompt &gt; <code>checked</code></li> </ul> </li> <li>Security Features<ul> <li>Allow UEFI 3<sup>rd</sup> party driver loaded &gt; <code>unchecked</code></li> <li>Unattended BIOS Configuration &gt; <code>Always Prompt</code></li> <li>Execute Disable Bit &gt; <code>checked</code></li> <li>Intel Virtualization Technology &gt; <code>checked</code></li> <li>Intel VT for Directed I/O (VT-d) &gt; <code>checked</code></li> <li>Fixed Disk Boot Selector &gt; <code>Normal</code></li> <li>Intel Platform Trust Technology &gt; <code>unchecked</code></li> <li>Intel Software Guard Extenstion (SGX) &gt; <code>Software Controlled</code></li> <li>SGX Owner EPOCHs &gt; <code>Factory Default</code></li> </ul> </li> </ul> </li> <li>Power<ul> <li>Primary Power Settings<ul> <li>Balanced Enabled &gt; <code>unchecked</code></li> <li>Low Power Enabled &gt; <code>unchecked</code></li> <li>Max Performance Enabled &gt; <code>checked</code></li> </ul> </li> <li>Secondary Power Settings<ul> <li>Power Sense &gt; <code>checked</code></li> <li>After Power Failure &gt; <code>Stay Off</code></li> <li>Deep S4/S5 &gt; <code>unchecked</code></li> <li>S0 State Indicator &gt; <code>ON (solid, primary color)</code></li> <li>S3 State Indicator &gt; <code>Blink (alternate color @ 0.25 Hz)</code></li> <li>Wake on LAN from S4/S5 &gt; <code>Power On - PXE Boot</code></li> <li>Wake System from S5 &gt; <code>unchecked</code></li> <li>USB S4/S5 Power &gt; <code>unchecked</code></li> <li>PCIe ASPM Power &gt; <code>checked</code></li> <li>Native ACPI OS PCIe Supprt &gt; <code>unchecked</code></li> <li>Flash Update Sleep Delay &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot<ul> <li>Boot Priority<ul> <li>UEFI Boot Priority<ul> <li>UEFI Boot &gt; <code>checked</code></li> </ul> </li> <li>Legacy Boot Priority<ul> <li>Legacy Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Configuration<ul> <li>Boot UEFI<ul> <li>Fast Boot &gt; <code>unchecked</code></li> <li>Boot USB Devices First &gt; <code>checked</code></li> <li>Boot Network Devices Last <code>checked</code></li> <li>Unlimited Boot to Network Attempts &gt; <code>unchecked</code></li> <li>BIOS Setup Auto-Entry &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Devices<ul> <li>Internal UEFI Shell &gt; <code>unchecked</code></li> <li>USB &gt; <code>checked</code></li> <li>Optical &gt; <code>checked</code></li> <li>Network Boot &gt; <code>UEFI PXE &amp; iSCSI</code></li> </ul> </li> <li>Boot Display Config<ul> <li>Failsafe Watchdog &gt; <code>checked</code></li> <li>Suppress Alert Messages At Boot &gt; <code>unchecked</code></li> <li>Expansion Card Test &gt; <code>Disable</code></li> <li>Keyboard Ready Beep &gt; <code>unchecked</code></li> <li>POST Function Hotkeys Displayed &gt; <code>checked</code></li> <li>Display F2 to Enter Setup &gt; <code>checked</code></li> <li>Display F7 to Update BIOS &gt; <code>checked</code></li> <li>Display F10 to Enter Boot Menu &gt; <code>checked</code></li> <li>Display F12 for Network Boot &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Secure Boot<ul> <li>Secure Boot Config<ul> <li>Securte Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"construction/cloudkoffer-v1/#peripheral-devices","title":"Peripheral Devices","text":""},{"location":"construction/cloudkoffer-v1/#monitor","title":"Monitor","text":"GeChic On-Lap 2501H - Front view GeChic On-Lap 2501H - Side view <ul> <li>Panel Type: 15.6\" TFT IPS LCD (16:9 Wide) LED Backlight</li> <li>Resolution: 1920 x 1080 (60Hz/60Hz)</li> <li>Color Depth: 262K colors</li> <li>Connectivity: Micro-HDMI, VGA, Headphone out</li> <li>Weight: 780g</li> <li>Surface Treatment: Anti-glare</li> <li>Active Area: 344.2 x 193.5 mm (W x H)</li> <li>Pixel Pitch: 0.179 x 0.179 mm (H x V)</li> <li>Viewing Angle: 80\u00b0 / 80\u00b0 / 80\u00b0 / 80\u00b0 (U/D/L/R)</li> <li>Contrast Ratio: 400:1</li> <li>Brightness: 250 cd/m2</li> <li>Response Time: 17.5 ms</li> <li>Dimensions: 395 x 260 x 16.33 mm (W x H x D)</li> </ul>"},{"location":"construction/cloudkoffer-v1/#keyboard-and-mouse","title":"Keyboard and Mouse","text":"Logitech K400 Wireless Touch Keyboard <ul> <li>Dimensions: 13.59 x 35.31 x 2.39 cm</li> <li>Weight: 360.04 g</li> <li>Batteries: 1x AAA</li> <li>Built-In Multi-Touch Touchpad</li> </ul>"},{"location":"construction/cloudkoffer-v2/","title":"Cloudkoffer v2","text":""},{"location":"construction/cloudkoffer-v2/#cloudkoffer-v2","title":"Cloudkoffer v2","text":"Front view (outer) Back view (outer) Top view (inner) - 1 Top view (inner) - 2 Back view (inner)"},{"location":"construction/cloudkoffer-v2/#case","title":"Case","text":""},{"location":"construction/cloudkoffer-v2/#router","title":"Router","text":"Ubiquiti EdgeRouter X"},{"location":"construction/cloudkoffer-v2/#port-assignment","title":"Port Assignment","text":"Port Connection eth0 WAN eth1 LAN eth2 - eth3 - eth4 Switch"},{"location":"construction/cloudkoffer-v2/#switch","title":"Switch","text":"Netgear GS316 \u2013 16-Port Gigabit Ethernet Unmanaged Switch"},{"location":"construction/cloudkoffer-v2/#node","title":"Node","text":"Intel NUC Kit NUC6i7KYK"},{"location":"construction/cloudkoffer-v2/#specifications","title":"Specifications","text":"Name Description Type Intel NUC Kit NUC6i7KYK (Specs) UEFI KYSKLi70.86A.0074.2021.1029.0102 Processor Intel Core i7-6770HQ Base Frequency: 2.60 GHz Turbo Frequency: 3.50 GHz Cache: 6 MB (L3), 128 MB (L4) Cores/Threads: 4/8 Memory 32 GB - 2x 16 GB (DDR4-2133) Graphics Intel Iris Pro Graphics 580 Mini-DP 1.2 HDMI 2.0 USB-C (DP1.2) Storage  Samsung SSD 960 PRO 1 TB Networking  Intel Ethernet Connection I219-LM Intel Wireless-AC 8260 + Bluetooth 4.2 TDP 45 W Features  Thunderbolt 3 (40Gbps) USB 3.1 Gen 2 (10Gbps) SDXC (with UHS-I support)"},{"location":"construction/cloudkoffer-v2/#mac-addresses","title":"MAC Addresses","text":"Name Address Node 1 00:1f:c6:9c:1c:a0 Node 2 00:1f:c6:9c:1a:b0 Node 3 00:1f:c6:9c:1c:fe Node 4 00:1f:c6:9c:1a:ac Node 5 00:1f:c6:9c:1a:ae Node 6 00:1f:c6:9c:1c:60 Node 7 00:1f:c6:9c:1a:b1 Node 8 00:1f:c6:9c:1c:64 Node 9 00:1f:c6:9c:1c:8d Node 10 00:1f:c6:9c:1c:5a"},{"location":"construction/cloudkoffer-v2/#uefi","title":"UEFI","text":"Configuration details <ul> <li>Advanced<ul> <li>Main<ul> <li>Default Visual BIOS Start Page &gt; <code>Home Page 1</code></li> <li>Event Log<ul> <li>Clear Event Log &gt; <code>unchecked</code></li> <li>Event Logging &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Devices<ul> <li>USB<ul> <li>USB Configuration<ul> <li>USB Legacy &gt; <code>checked</code></li> <li>Portable Device Charging Mode &gt; <code>Charging in S3/S4/S5</code></li> </ul> </li> <li>USB Ports<ul> <li>USB Port 0x: <code>Enable</code></li> </ul> </li> </ul> </li> <li>SATA<ul> <li>Chipset SATA Controller Configuration<ul> <li>Chipset SATA &gt; <code>checked</code></li> <li>Chipset SATA Mode &gt; <code>AHCI</code></li> <li>S.M.A.R.T &gt; <code>checked</code></li> <li>Hard Disk Pre-Delay &gt; <code>0</code></li> <li>HDD Activity LED &gt; <code>checked</code></li> <li>M.2 PCIe SSD LED &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Video<ul> <li>Video Configuration</li> <li>IDG Minimum Memory &gt; <code>64 MB</code></li> <li>IDG Aperture Size &gt; <code>256 MB</code></li> <li>IDG Primary Video Port &gt; <code>Auto</code></li> </ul> </li> <li>Onboard Devices<ul> <li>Onboard Device Configuration<ul> <li>Audio &gt; <code>unchecked</code></li> <li>LAN &gt; <code>checked</code></li> <li>WLAN &gt; <code>unchecked</code></li> <li>Bluetooth &gt; <code>unchecked</code></li> <li>SD Card &gt; <code>read/write</code></li> </ul> </li> <li>Legacy Device Configuration<ul> <li>Enhance Consumer IR &gt; <code>unchecked</code></li> <li>High Precision Event Timers &gt; <code>checked</code></li> <li>Num Lock &gt; <code>Checked</code></li> </ul> </li> </ul> </li> <li>PCI<ul> <li>PCI Configuration<ul> <li>M.2 Slot 1 &gt; <code>checked</code></li> <li>M.2 Slot 2 &gt; <code>checked</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Cooling<ul> <li>CPU Fan Header<ul> <li>Fan Control Mode &gt; <code>Cool</code></li> <li>Minimum Duty Cycle (%) &gt; <code>27</code></li> <li>Primary Temperature Sensor &gt; <code>Processor</code></li> <li>Minimum Temperature (\u00b0C) &gt; <code>65</code></li> <li>Duty Cycle Increment (%/\u00b0C) &gt; <code>2</code></li> </ul> </li> </ul> </li> <li>Performance<ul> <li>Processor<ul> <li>Core Settings<ul> <li>Intel Hyper-Threading Technology &gt; <code>checked</code></li> <li>Intel Tubrbo Boost Technology &gt; <code>checked</code></li> <li>Active Processor Cores &gt; <code>ALL</code></li> <li>Real-Time Performance Tuning &gt; <code>checked</code></li> <li>Silicon Debug Features &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Memory<ul> <li>General Settings<ul> <li>Memory Profiles &gt; <code>Automatic</code></li> <li>Round Trip Latency &gt; <code>checked</code></li> <li>TCR &gt; <code>Disabled</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Security<ul> <li>Password<ul> <li>Supervisor Password &gt; <code>Not installed</code></li> <li>User Password &gt; <code>Not installed</code></li> </ul> </li> <li>Security Features<ul> <li>Allow UEFI 3<sup>rd</sup> party driver loaded &gt; <code>unchecked</code></li> <li>Unattended BIOS Configuration &gt; <code>Always Prompt</code></li> <li>Execute Disable Bit &gt; <code>checked</code></li> <li>Intel Virtualization Technology &gt; <code>checked</code></li> <li>Intel VT for Directed I/O (VT-d) &gt; <code>checked</code></li> <li>Fixed Disk Boot Selector &gt; <code>Normal</code></li> <li>Intel Platform Trust Technology &gt; <code>unchecked</code></li> <li>Intel Software Guard Extenstion (SGX) &gt; <code>Software Controlled</code></li> <li>SGX Owner EPOCHs &gt; <code>Factory Default</code></li> <li>Thunderbolt Security Level &gt; <code>Unique ID</code></li> </ul> </li> </ul> </li> <li>Power<ul> <li>Primary Power Settings<ul> <li>Balanced Enabled &gt; <code>unchecked</code></li> <li>Low Power Enabled &gt; <code>unchecked</code></li> <li>Max Performance Enabled &gt; <code>checked</code></li> </ul> </li> <li>Secondary Power Settings<ul> <li>Power Sense &gt; <code>checked</code></li> <li>After Power Failure &gt; <code>Stay Off</code></li> <li>Deep S4/S5 &gt; <code>unchecked</code></li> <li>S0 State Indicator &gt; <code>ON (solid, primary color)</code></li> <li>S3 State Indicator &gt; <code>Blink (alternate color @ 0.25 Hz)</code></li> <li>Wake on LAN from S4/S5 &gt; <code>Power On - PXE Boot</code></li> <li>Wake System from S5 &gt; <code>unchecked</code></li> <li>USB S4/S5 Power &gt; <code>unchecked</code></li> <li>PCIe ASPM Power &gt; <code>checked</code></li> <li>Native ACPI OS PCIe Supprt &gt; <code>checked</code></li> <li>Flash Update Sleep Delay &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot<ul> <li>Boot Priority<ul> <li>UEFI Boot Priority<ul> <li>UEFI Boot &gt; <code>checked</code></li> </ul> </li> <li>Legacy Boot Priority<ul> <li>Legacy Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Configuration<ul> <li>Boot UEFI<ul> <li>Fast Boot &gt; <code>unchecked</code></li> <li>Boot USB Devices First &gt; <code>checked</code></li> <li>Boot Network Devices Last <code>checked</code></li> <li>Unlimited Boot to Network Attempts &gt; <code>unchecked</code></li> <li>BIOS Setup Auto-Entry &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Devices<ul> <li>Internal UEFI Shell &gt; <code>unchecked</code></li> <li>USB &gt; <code>checked</code></li> <li>Optical &gt; <code>checked</code></li> <li>Network Boot &gt; <code>UEFI PXE &amp; iSCSI</code></li> </ul> </li> <li>Boot Display Config<ul> <li>Failsafe Watchdog &gt; <code>checked</code></li> <li>Suppress Alert Messages At Boot &gt; <code>unchecked</code></li> <li>Expansion Card Test &gt; <code>Disable</code></li> <li>Keyboard Ready Beep &gt; <code>unchecked</code></li> <li>POST Function Hotkeys Displayed &gt; <code>checked</code></li> <li>Display F2 to Enter Setup &gt; <code>checked</code></li> <li>Display F7 to Update BIOS &gt; <code>checked</code></li> <li>Display F10 to Enter Boot Menu &gt; <code>checked</code></li> <li>Display F12 for Network Boot &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Secure Boot<ul> <li>Secure Boot Config<ul> <li>Securte Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"construction/cloudkoffer-v2/#peripheral-devices","title":"Peripheral Devices","text":""},{"location":"construction/cloudkoffer-v2/#monitor","title":"Monitor","text":""},{"location":"construction/cloudkoffer-v2/#keyboard-and-mouse","title":"Keyboard and Mouse","text":""},{"location":"construction/cloudkoffer-v3/","title":"Cloudkoffer v3","text":""},{"location":"construction/cloudkoffer-v3/#cloudkoffer-v3","title":"Cloudkoffer v3","text":"Front view (outer) Back view (outer) Top view (inner) - 1 Top view (inner) - 2 Bottom view (outer) Side view (inner) Bottom view (inner) Back view (inner)"},{"location":"construction/cloudkoffer-v3/#case","title":"Case","text":""},{"location":"construction/cloudkoffer-v3/#router","title":"Router","text":"Ubiquiti EdgeRouter X"},{"location":"construction/cloudkoffer-v3/#port-assignment","title":"Port Assignment","text":"Port Connection eth0 WAN eth1 LAN1 eth2 LAN2 eth3 - eth4 Switch"},{"location":"construction/cloudkoffer-v3/#switch","title":"Switch","text":"Netgear GS116Ev2 \u2013 16-Port Gigabit Ethernet Plus Switch"},{"location":"construction/cloudkoffer-v3/#node","title":"Node","text":"Intel NUC Kit NUC6i7KYK"},{"location":"construction/cloudkoffer-v3/#specifications","title":"Specifications","text":"Name Description Type Intel NUC Kit NUC6i7KYK (Specs) UEFI KYSKLi70.86A.0074.2021.1029.0102 Processor Intel Core i7-6770HQ Base Frequency: 2.60 GHz Turbo Frequency: 3.50 GHz Cache: 6 MB (L3), 128 MB (L4) Cores/Threads: 4/8 Memory 32 GB - 2x 16 GB (DDR4-2133) Graphics Intel Iris Pro Graphics 580 Mini-DP 1.2 HDMI 2.0 USB-C (DP1.2) Storage  Samsung SSD 960 PRO 1 TB Networking  Intel Ethernet Connection I219-LM Intel Wireless-AC 8260 + Bluetooth 4.2 TDP 45 W Features  Thunderbolt 3 (40Gbps) USB 3.1 Gen 2 (10Gbps) SDXC (with UHS-I support)"},{"location":"construction/cloudkoffer-v3/#mac-addresses","title":"MAC Addresses","text":"Name Address Node 1 00:1f:c6:9c:8b:2d Node 2 00:1f:c6:9c:86:8f Node 3 00:1f:c6:9d:09:08 Node 4 00:1f:c6:9c:8a:20 Node 5 00:1f:c6:9c:89:ca Node 6 00:1f:c6:9c:90:a7 Node 7 00:1f:c6:9c:89:d7 Node 8 00:1f:c6:9c:8f:f2 Node 9 00:1f:c6:9c:92:a0 Node 10 00:1f:c6:9c:91:e6"},{"location":"construction/cloudkoffer-v3/#uefi","title":"UEFI","text":"Configuration details <ul> <li>Advanced<ul> <li>Main<ul> <li>Default Visual BIOS Start Page &gt; <code>Home Page 1</code></li> <li>Event Log<ul> <li>Clear Event Log &gt; <code>unchecked</code></li> <li>Event Logging &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Devices<ul> <li>USB<ul> <li>USB Configuration<ul> <li>USB Legacy &gt; <code>checked</code></li> <li>Portable Device Charging Mode &gt; <code>Charging in S3/S4/S5</code></li> </ul> </li> <li>USB Ports<ul> <li>USB Port 0x: <code>Enable</code></li> </ul> </li> </ul> </li> <li>SATA<ul> <li>Chipset SATA Controller Configuration<ul> <li>Chipset SATA &gt; <code>checked</code></li> <li>Chipset SATA Mode &gt; <code>AHCI</code></li> <li>S.M.A.R.T &gt; <code>checked</code></li> <li>Hard Disk Pre-Delay &gt; <code>0</code></li> <li>HDD Activity LED &gt; <code>checked</code></li> <li>M.2 PCIe SSD LED &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Video<ul> <li>Video Configuration</li> <li>IDG Minimum Memory &gt; <code>64 MB</code></li> <li>IDG Aperture Size &gt; <code>256 MB</code></li> <li>IDG Primary Video Port &gt; <code>Auto</code></li> </ul> </li> <li>Onboard Devices<ul> <li>Onboard Device Configuration<ul> <li>Audio &gt; <code>unchecked</code></li> <li>LAN &gt; <code>checked</code></li> <li>WLAN &gt; <code>unchecked</code></li> <li>Bluetooth &gt; <code>unchecked</code></li> <li>SD Card &gt; <code>read/write</code></li> </ul> </li> <li>Legacy Device Configuration<ul> <li>Enhance Consumer IR &gt; <code>unchecked</code></li> <li>High Precision Event Timers &gt; <code>checked</code></li> <li>Num Lock &gt; <code>Checked</code></li> </ul> </li> </ul> </li> <li>PCI<ul> <li>PCI Configuration<ul> <li>M.2 Slot 1 &gt; <code>checked</code></li> <li>M.2 Slot 2 &gt; <code>checked</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Cooling<ul> <li>CPU Fan Header<ul> <li>Fan Control Mode &gt; <code>Cool</code></li> <li>Minimum Duty Cycle (%) &gt; <code>27</code></li> <li>Primary Temperature Sensor &gt; <code>Processor</code></li> <li>Minimum Temperature (\u00b0C) &gt; <code>65</code></li> <li>Duty Cycle Increment (%/\u00b0C) &gt; <code>2</code></li> </ul> </li> </ul> </li> <li>Performance<ul> <li>Processor<ul> <li>Core Settings<ul> <li>Intel Hyper-Threading Technology &gt; <code>checked</code></li> <li>Intel Tubrbo Boost Technology &gt; <code>checked</code></li> <li>Active Processor Cores &gt; <code>ALL</code></li> <li>Real-Time Performance Tuning &gt; <code>checked</code></li> <li>Silicon Debug Features &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Memory<ul> <li>General Settings<ul> <li>Memory Profiles &gt; <code>Automatic</code></li> <li>Round Trip Latency &gt; <code>checked</code></li> <li>TCR &gt; <code>Disabled</code></li> </ul> </li> </ul> </li> </ul> </li> <li>Security<ul> <li>Password<ul> <li>Supervisor Password &gt; <code>Not installed</code></li> <li>User Password &gt; <code>Not installed</code></li> </ul> </li> <li>Security Features<ul> <li>Allow UEFI 3<sup>rd</sup> party driver loaded &gt; <code>unchecked</code></li> <li>Unattended BIOS Configuration &gt; <code>Always Prompt</code></li> <li>Execute Disable Bit &gt; <code>checked</code></li> <li>Intel Virtualization Technology &gt; <code>checked</code></li> <li>Intel VT for Directed I/O (VT-d) &gt; <code>checked</code></li> <li>Fixed Disk Boot Selector &gt; <code>Normal</code></li> <li>Intel Platform Trust Technology &gt; <code>unchecked</code></li> <li>Intel Software Guard Extenstion (SGX) &gt; <code>Software Controlled</code></li> <li>SGX Owner EPOCHs &gt; <code>Factory Default</code></li> <li>Thunderbolt Security Level &gt; <code>Unique ID</code></li> </ul> </li> </ul> </li> <li>Power<ul> <li>Primary Power Settings<ul> <li>Balanced Enabled &gt; <code>unchecked</code></li> <li>Low Power Enabled &gt; <code>unchecked</code></li> <li>Max Performance Enabled &gt; <code>checked</code></li> </ul> </li> <li>Secondary Power Settings<ul> <li>Power Sense &gt; <code>checked</code></li> <li>After Power Failure &gt; <code>Stay Off</code></li> <li>Deep S4/S5 &gt; <code>unchecked</code></li> <li>S0 State Indicator &gt; <code>ON (solid, primary color)</code></li> <li>S3 State Indicator &gt; <code>Blink (alternate color @ 0.25 Hz)</code></li> <li>Wake on LAN from S4/S5 &gt; <code>Power On - PXE Boot</code></li> <li>Wake System from S5 &gt; <code>unchecked</code></li> <li>USB S4/S5 Power &gt; <code>unchecked</code></li> <li>PCIe ASPM Power &gt; <code>checked</code></li> <li>Native ACPI OS PCIe Supprt &gt; <code>checked</code></li> <li>Flash Update Sleep Delay &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot<ul> <li>Boot Priority<ul> <li>UEFI Boot Priority<ul> <li>UEFI Boot &gt; <code>checked</code></li> </ul> </li> <li>Legacy Boot Priority<ul> <li>Legacy Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Configuration<ul> <li>Boot UEFI<ul> <li>Fast Boot &gt; <code>unchecked</code></li> <li>Boot USB Devices First &gt; <code>checked</code></li> <li>Boot Network Devices Last <code>checked</code></li> <li>Unlimited Boot to Network Attempts &gt; <code>unchecked</code></li> <li>BIOS Setup Auto-Entry &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> <li>Boot Devices<ul> <li>Internal UEFI Shell &gt; <code>unchecked</code></li> <li>USB &gt; <code>checked</code></li> <li>Optical &gt; <code>checked</code></li> <li>Network Boot &gt; <code>UEFI PXE &amp; iSCSI</code></li> </ul> </li> <li>Boot Display Config<ul> <li>Failsafe Watchdog &gt; <code>checked</code></li> <li>Suppress Alert Messages At Boot &gt; <code>unchecked</code></li> <li>Expansion Card Test &gt; <code>Disable</code></li> <li>Keyboard Ready Beep &gt; <code>unchecked</code></li> <li>POST Function Hotkeys Displayed &gt; <code>checked</code></li> <li>Display F2 to Enter Setup &gt; <code>checked</code></li> <li>Display F7 to Update BIOS &gt; <code>checked</code></li> <li>Display F10 to Enter Boot Menu &gt; <code>checked</code></li> <li>Display F12 for Network Boot &gt; <code>checked</code></li> </ul> </li> </ul> </li> <li>Secure Boot<ul> <li>Secure Boot Config<ul> <li>Securte Boot &gt; <code>unchecked</code></li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"construction/cloudkoffer-v3/#peripheral-devices","title":"Peripheral Devices","text":""},{"location":"construction/cloudkoffer-v3/#monitor","title":"Monitor","text":""},{"location":"construction/cloudkoffer-v3/#keyboard-and-mouse","title":"Keyboard and Mouse","text":""},{"location":"construction/cloudkoffer-v4/","title":"Cloudkoffer v4","text":""},{"location":"construction/cloudkoffer-v4/#cloudkoffer-v4","title":"Cloudkoffer v4","text":"<p>Example</p> <p>A new cloud case is currently being worked on, so stay tuned!</p>"},{"location":"construction/cloudkoffer-v4/#case","title":"Case","text":""},{"location":"construction/cloudkoffer-v4/#router","title":"Router","text":""},{"location":"construction/cloudkoffer-v4/#switch","title":"Switch","text":""},{"location":"construction/cloudkoffer-v4/#node","title":"Node","text":""},{"location":"gadgets/","title":"Gadgets","text":""},{"location":"gadgets/launch-control/","title":"Novation Launch Control","text":"<p> github.com/akowasch/cloudcontrol</p> <p></p>"},{"location":"gadgets/launchpad-mk2/","title":"Novation Launchpad MK2","text":"<p> github.com/akowasch/kubepad</p> <p></p>"},{"location":"provisioning/","title":"Provisioning","text":""},{"location":"provisioning/gitops/flux/","title":"Flux","text":""},{"location":"provisioning/gitops/flux/#flux","title":"Flux","text":""},{"location":"provisioning/gitops/flux/#description","title":"Description","text":"<p>Flux is a tool for keeping Kubernetes clusters in sync with sources of configuration (like Git repositories and OCI artifacts), and automating updates to configuration when there is new code to deploy.</p> <p>Flux version 2 (\"v2\") is built from the ground up to use Kubernetes' API extension system, and to integrate with Prometheus and other core components of the Kubernetes ecosystem. In version 2, Flux supports multi-tenancy and support for syncing an arbitrary number of Git repositories, among other long-requested features.</p> <p>Flux v2 is constructed with the GitOps Toolkit, a set of composable APIs and specialized tools for building Continuous Delivery on top of Kubernetes.</p>"},{"location":"provisioning/gitops/flux/#installation-steps","title":"Installation Steps","text":"<ul> <li> <p>Checkout the  provisioning-gitops-flux repository.</p> Shell<pre><code>git clone https://github.com/cloudkoffer/provisioning-gitops-flux\ncd provisioning-gitops-flux\n</code></pre> </li> <li> <p>Install and configure age, kubectl and flux.</p> CLITerraform <ul> <li>https://github.com/FiloSottile/age</li> <li>https://kubernetes.io/docs/tasks/tools/</li> <li>https://fluxcd.io/flux/cmd/</li> </ul> File: variables.tf<pre><code>variable \"github_token\" {\n  description = \"The personal access token to authenticate to GitHub.\"\n  type        = string\n  nullable    = false\n}\n</code></pre> File: provider.tf<pre><code>terraform {\n  required_providers {\n    # https://github.com/clementblaise/terraform-provider-age/blob/main/CHANGELOG.md\n    age = {\n      source  = \"clementblaise/age\"\n      version = \"0.1.1\"\n    }\n    # https://github.com/hashicorp/terraform-provider-local/blob/main/CHANGELOG.md\n    local = {\n      source  = \"hashicorp/local\"\n      version = \"2.5.1\"\n    }\n    # https://github.com/hashicorp/terraform-provider-kubernetes/blob/main/CHANGELOG.md\n    kubernetes = {\n      source  = \"hashicorp/kubernetes\"\n      version = \"2.30.0\"\n    }\n    # https://github.com/integrations/terraform-provider-github/releases\n    github = {\n      source  = \"integrations/github\"\n      version = \"6.2.1\"\n    }\n    # https://github.com/fluxcd/terraform-provider-flux/blob/main/CHANGELOG.md\n    flux = {\n      source  = \"fluxcd/flux\"\n      version = \"1.3.0\"\n    }\n  }\n}\n\nprovider \"kubernetes\" {\n  config_path = \"~/.kube/config\"\n}\n\nprovider \"github\" {\n  owner = \"cloudkoffer\"\n  token = var.github_token\n}\n\nprovider \"flux\" {\n  kubernetes = {\n    config_path = \"~/.kube/config\"\n  }\n\n  git = {\n    url = \"https://github.com/cloudkoffer/gitops-flux.git\"\n    http = {\n      username = \"git\"\n      password = var.github_token\n    }\n  }\n}\n</code></pre> </li> <li> <p>Create SOPS age key.</p> CLITerraform Shell<pre><code>age-keygen --output age.key\n</code></pre> File: main.tf<pre><code>resource \"age_secret_key\" \"this\" {}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Create SOPS configuration.</p> CLITerraform Shell<pre><code>cat &lt;&lt;EOF &gt; sops.yaml\ncreation_rules:\n  - path_regex: .*.yaml\n    encrypted_regex: ^(data|stringData)$\n    age: $(age-keygen -y age.key)\nEOF\n</code></pre> File: main.tf<pre><code>resource \"local_file\" \"this\" {\n  filename = \"sops.yaml\"\n  content  = &lt;&lt;-EOT\n  creation_rules:\n    - path_regex: .*.yaml\n      encrypted_regex: ^(data|stringData)$\n      age: ${age_secret_key.this.public_key}\n  EOT\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Create SOPS Kubernetes secret.</p> CLITerraform Shell<pre><code>kubectl create namespace flux-system &amp;&gt;/dev/null || true\nkubectl create secret generic sops-age \\\n  --namespace=flux-system \\\n  --from-file=age.key\n</code></pre> File: main.tf<pre><code>resource \"kubernetes_namespace\" \"flux_system\" {\n  metadata {\n    name = \"flux-system\"\n  }\n}\n\nresource \"kubernetes_secret\" \"sops_age\" {\n  metadata {\n    name      = \"sops-age\"\n    namespace = kubernetes_namespace.flux_system.metadata.0.name\n  }\n\n  data = {\n    \"age.agekey\" = &lt;&lt;-EOT\n    # created: 2024-01-01T00:00:00+01:00\n    # public key: ${age_secret_key.this.public_key}\n    ${age_secret_key.this.secret_key}\n    EOT\n  }\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Bootstrap flux.</p> CLITerraform Shell<pre><code>export GITHUB_TOKEN=&lt;github-token&gt;\n\nflux bootstrap github \\\n  --owner=cloudkoffer \\\n  --repository=gitops-flux \\\n  --path=cluster \\\n  --token-auth\n</code></pre> File: main.tf<pre><code>resource \"flux_bootstrap_git\" \"this\" {\n  path           = \"cluster\"\n  version        = \"v2.3.0\" # https://github.com/fluxcd/flux2/releases\n  log_level      = \"info\"   # debug, info, error\n  network_policy = false\n\n  depends_on = [\n    kubernetes_secret.sops_age,\n  ]\n}\n</code></pre> Shell<pre><code>export TF_VAR_github_token=&lt;github-token&gt;\nterraform apply\n</code></pre> </li> </ul>"},{"location":"provisioning/gitops/flux/#maintenance-steps","title":"Maintenance Steps","text":"<p> gitops-flux</p>"},{"location":"provisioning/kubernetes/talos/","title":"Talos","text":""},{"location":"provisioning/kubernetes/talos/#talos","title":"Talos","text":""},{"location":"provisioning/kubernetes/talos/#description","title":"Description","text":"<p>Talos is a modern OS for running Kubernetes: secure, immutable, and minimal. Talos is fully open source, production-ready, and supported by the people at Sidero Labs All system management is done via an API - there is no shell or interactive console. Benefits include:</p> <ul> <li>Security: Talos reduces your attack surface: It's minimal, hardened, and immutable. All API access is secured with mutual TLS (mTLS) authentication.</li> <li>Predictability: Talos eliminates configuration drift, reduces unknown factors by employing immutable infrastructure ideology, and delivers atomic updates.</li> <li>Evolvability: Talos simplifies your architecture, increases your agility, and always delivers current stable Kubernetes and Linux versions.</li> </ul>"},{"location":"provisioning/kubernetes/talos/#features","title":"Features","text":"<ul> <li>Minimal - Talos consists of only a handful of binaries and shared libraries: just enough to run containerd and a small set of system services. This aligns with NIST's recommendation in the Application Container Security Guide.</li> <li>Hardened - Built with the Kernel Self Protection Project configuration recommendations. All access to the API is secured with Mutual TLS. Settings and configuration described in the CIS guidelines are applied by default.</li> <li>Immutable - Talos improves security further by mounting the root filesystem as read-only and removing any host-level such as a shell and SSH.</li> <li>Ephemeral - Talos runs in memory from a SquashFS, and persists nothing, leaving the primary disk entirely to Kubernetes.</li> <li>Current - Delivers the latest stable versions of Kubernetes and Linux.</li> </ul>"},{"location":"provisioning/kubernetes/talos/#installation-steps","title":"Installation Steps","text":"<ul> <li> <p>Checkout the  provisioning-k8s-talos repository.</p> Shell<pre><code>git clone https://github.com/cloudkoffer/provisioning-k8s-talos\ncd provisioning-k8s-talos\n</code></pre> </li> <li> <p>Configure environment variables.</p> CLITerraform Cloudkoffer v3Cloudkoffer v2Cloudkoffer v1 File: .envrc<pre><code>TALOS_VERSION=v1.7.4\nKUBERNETES_VERSION=1.30.1\nNODES_CONTROLPLANE=(\n  192.168.1.1\n  192.168.1.2\n  192.168.1.3\n)\nNODES_WORKER=(\n  192.168.1.4\n  192.168.1.5\n  192.168.1.6\n  192.168.1.7\n  192.168.1.8\n  192.168.1.9\n  192.168.1.10\n)\n</code></pre> File: .envrc<pre><code>TALOS_VERSION=v1.7.4\nKUBERNETES_VERSION=1.30.1\nNODES_CONTROLPLANE=(\n  192.168.1.1\n  192.168.1.2\n  192.168.1.3\n)\nNODES_WORKER=(\n  192.168.1.4\n  192.168.1.5\n  192.168.1.6\n  192.168.1.7\n  192.168.1.8\n  192.168.1.9\n  192.168.1.10\n)\n</code></pre> File: .envrc<pre><code>TALOS_VERSION=v1.7.4\nKUBERNETES_VERSION=1.30.1\nNODES_CONTROLPLANE=(\n  192.168.1.1\n  192.168.1.2\n  192.168.1.3\n)\nNODES_WORKER=(\n  192.168.1.4\n  192.168.1.5\n)\n</code></pre> Cloudkoffer v3Cloudkoffer v2Cloudkoffer v1 File: .envrc<pre><code>TF_VAR_talos_version=1.7.4\nTF_VAR_kubernetes_version=1.30.1\nTF_VAR_nodes='{\n  \"controlplane\"=[\n    \"192.168.1.1\",\n    \"192.168.1.2\",\n    \"192.168.1.3\"\n  ],\n  \"worker\"=[\n    \"192.168.1.4\",\n    \"192.168.1.5\",\n    \"192.168.1.6\",\n    \"192.168.1.7\",\n    \"192.168.1.8\",\n    \"192.168.1.9\",\n    \"192.168.1.10\"\n  ]\n}'\n</code></pre> File: .envrc<pre><code>TF_VAR_talos_version=1.7.4\nTF_VAR_kubernetes_version=1.30.1\nTF_VAR_nodes='{\n  \"controlplane\"=[\n    \"192.168.1.1\",\n    \"192.168.1.2\",\n    \"192.168.1.3\"\n  ],\n  \"worker\"=[\n    \"192.168.1.4\",\n    \"192.168.1.5\",\n    \"192.168.1.6\",\n    \"192.168.1.7\",\n    \"192.168.1.8\",\n    \"192.168.1.9\",\n    \"192.168.1.10\"\n  ]\n}'\n</code></pre> File: .envrc<pre><code>TF_VAR_talos_version=1.7.4\nTF_VAR_kubernetes_version=1.30.1\nTF_VAR_nodes='{\n  \"controlplane\"=[\n    \"192.168.1.1\",\n    \"192.168.1.2\",\n    \"192.168.1.3\"\n  ],\n  \"worker\"=[\n    \"192.168.1.4\",\n    \"192.168.1.5\"\n  ]\n}'\n</code></pre> </li> <li> <p>Install and configure talosctl.</p> CLITerraform <ul> <li>https://www.talos.dev/latest/talos-guides/install/talosctl/</li> </ul> Shell<pre><code>curl -sL https://talos.dev/install | sh\n</code></pre> File: provider.tf<pre><code>terraform {\n  required_providers {\n    # https://github.com/siderolabs/terraform-provider-talos/releases\n    talos = {\n      source  = \"siderolabs/talos\"\n      version = \"0.5.0\"\n    }\n  }\n}\n\nprovider \"talos\" {}\n</code></pre> </li> <li> <p>Boot the nodes using either USB sticks or a network boot (F12).</p> </li> <li> <p>Wait until the nodes have entered maintenance mode.</p> <p>Note for the Terraform workflow</p> <p>The <code>talosctl</code> CLI is required to carry out the following step. The installation steps can be found in the CLI tab of the Install and configure talosctl step.</p> Cloudkoffer v3Cloudkoffer v2Cloudkoffer v1 Shell<pre><code>for node in {1..10}; do\n  echo -n \"Node ${node}: \"\n  talosctl get machinestatus \\\n    --nodes=\"192.168.1.${node}\" \\\n    --output=jsonpath='{.spec.stage}' \\\n    --insecure\ndone\n</code></pre> Shell<pre><code>for node in {1..10}; do\n  echo -n \"Node ${node}: \"\n  talosctl get machinestatus \\\n    --nodes=\"192.168.1.${node}\" \\\n    --output=jsonpath='{.spec.stage}' \\\n    --insecure\ndone\n</code></pre> Shell<pre><code>for node in {1..5}; do\n  echo -n \"Node ${node}: \"\n  talosctl get machinestatus \\\n    --nodes=\"192.168.1.${node}\" \\\n    --output=jsonpath='{.spec.stage}' \\\n    --insecure\ndone\n</code></pre> </li> <li> <p>Create talos machine secrets.</p> CLITerraform Shell<pre><code>talosctl gen secrets \\\n  --output-file=secrets.yaml\n</code></pre> File: variables.tf<pre><code>variable \"talos_version\" {\n  description = \"The talos version for the Talos cluster.\"\n  type        = string\n  nullable    = false\n}\n</code></pre> File: main.tf<pre><code>resource \"talos_machine_secrets\" \"this\" {\n  talos_version = var.talos_version\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Create talos configuration patches.</p> File: all.yaml Cloudkoffer v3Cloudkoffer v2Cloudkoffer v1 <pre><code>cluster:\n  discovery:\n    registries:\n      service:\n        disabled: true\n      kubernetes:\n        disabled: false\n  network:\n    cni:\n      # Use custom cni\n      # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n      name: none\n  proxy:\n    # Disable kube-proxy\n    # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n    disabled: true\nmachine:\n  install:\n    disk: /dev/nvme0n1\n    extraKernelArgs:\n      # Setting cpu scaling governor\n      # https://www.talos.dev/latest/learn-more/knowledge-base/#setting-cpu-scaling-governor\n      - cpufreq.default_governor=performance\n  kubelet:\n    extraArgs:\n      # Enable metrics server\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/deploy-metrics-server/\n      rotate-server-certificates: true\n    extraMounts:\n      # Enable local storage\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/local-storage/\n      - destination: /var/mnt\n        type: bind\n        source: /var/mnt\n        options:\n          - bind\n          - rshared\n          - rw\n  files:\n    # Expose containerd metrics\n    # https://www.talos.dev/latest/talos-guides/configuration/containerd/#exposing-metrics\n    - content: |\n        [metrics]\n          address = \"0.0.0.0:11234\"\n      path: /etc/cri/conf.d/20-customization.part\n      op: create\n</code></pre> <pre><code>cluster:\n  discovery:\n    registries:\n      service:\n        disabled: true\n      kubernetes:\n        disabled: false\n  network:\n    cni:\n      # Use custom cni\n      # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n      name: none\n  proxy:\n    # Disable kube-proxy\n    # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n    disabled: true\nmachine:\n  install:\n    disk: /dev/nvme0n1\n    extraKernelArgs:\n      # Setting cpu scaling governor\n      # https://www.talos.dev/latest/learn-more/knowledge-base/#setting-cpu-scaling-governor\n      - cpufreq.default_governor=performance\n  kubelet:\n    extraArgs:\n      # Enable metrics server\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/deploy-metrics-server/\n      rotate-server-certificates: true\n    extraMounts:\n      # Enable local storage\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/local-storage/\n      - destination: /var/mnt\n        type: bind\n        source: /var/mnt\n        options:\n          - bind\n          - rshared\n          - rw\n  files:\n    # Expose containerd metrics\n    # https://www.talos.dev/latest/talos-guides/configuration/containerd/#exposing-metrics\n    - content: |\n        [metrics]\n          address = \"0.0.0.0:11234\"\n      path: /etc/cri/conf.d/20-customization.part\n      op: create\n</code></pre> <pre><code>cluster:\n  discovery:\n    registries:\n      service:\n        disabled: true\n      kubernetes:\n        disabled: false\n  network:\n    cni:\n      # Use custom cni\n      # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n      name: none\n  proxy:\n    # Disable kube-proxy\n    # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#machine-config-preparation\n    disabled: true\nmachine:\n  install:\n    disk: /dev/sda\n    extraKernelArgs:\n      # Setting cpu scaling governor\n      # https://www.talos.dev/latest/learn-more/knowledge-base/#setting-cpu-scaling-governor\n      - cpufreq.default_governor=performance\n  kubelet:\n    extraArgs:\n      # Enable metrics server\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/deploy-metrics-server/\n      rotate-server-certificates: true\n    extraMounts:\n      # Enable local storage\n      # https://www.talos.dev/latest/kubernetes-guides/configuration/local-storage/\n      - destination: /var/mnt\n        type: bind\n        source: /var/mnt\n        options:\n          - bind\n          - rshared\n          - rw\n  files:\n    # Expose containerd metrics\n    # https://www.talos.dev/latest/talos-guides/configuration/containerd/#exposing-metrics\n    - content: |\n        [metrics]\n          address = \"0.0.0.0:11234\"\n      path: /etc/cri/conf.d/20-customization.part\n      op: create\n</code></pre> File: controlplane.yaml <pre><code>cluster:\n  apiServer:\n    certSANs:\n      - 192.168.1.101\n      - kube.case.local\n  extraManifests:\n    # Install metrics server\n    # https://www.talos.dev/latest/kubernetes-guides/configuration/deploy-metrics-server/\n    # https://github.com/alex1989hu/kubelet-serving-cert-approver/releases\n    - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.8.4/deploy/standalone-install.yaml\n    # https://github.com/kubernetes-sigs/metrics-server/releases\n    - https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.1/components.yaml\n  inlineManifests:\n    # Install cilium cni\n    # https://www.talos.dev/latest/kubernetes-guides/network/deploying-cilium/#method-5-using-a-job\n    - name: cilium-install\n      contents: |\n        ---\n        apiVersion: rbac.authorization.k8s.io/v1\n        kind: ClusterRoleBinding\n        metadata:\n          name: cilium-install\n        roleRef:\n          apiGroup: rbac.authorization.k8s.io\n          kind: ClusterRole\n          name: cluster-admin\n        subjects:\n        - kind: ServiceAccount\n          name: cilium-install\n          namespace: kube-system\n        ---\n        apiVersion: v1\n        kind: ServiceAccount\n        metadata:\n          name: cilium-install\n          namespace: kube-system\n        ---\n        apiVersion: batch/v1\n        kind: Job\n        metadata:\n          name: cilium-install\n          namespace: kube-system\n        spec:\n          backoffLimit: 10\n          template:\n            metadata:\n              labels:\n                app: cilium-install\n            spec:\n              restartPolicy: OnFailure\n              tolerations:\n                - operator: Exists\n                - effect: NoSchedule\n                  operator: Exists\n                - effect: NoExecute\n                  operator: Exists\n                - effect: PreferNoSchedule\n                  operator: Exists\n                - key: node-role.kubernetes.io/control-plane\n                  operator: Exists\n                  effect: NoSchedule\n                - key: node-role.kubernetes.io/control-plane\n                  operator: Exists\n                  effect: NoExecute\n                - key: node-role.kubernetes.io/control-plane\n                  operator: Exists\n                  effect: PreferNoSchedule\n              affinity:\n                nodeAffinity:\n                  requiredDuringSchedulingIgnoredDuringExecution:\n                    nodeSelectorTerms:\n                      - matchExpressions:\n                          - key: node-role.kubernetes.io/control-plane\n                            operator: Exists\n              serviceAccount: cilium-install\n              serviceAccountName: cilium-install\n              hostNetwork: true\n              containers:\n              - name: cilium-install\n                image: quay.io/cilium/cilium-cli-ci:latest\n                env:\n                - name: KUBERNETES_SERVICE_HOST\n                  valueFrom:\n                    fieldRef:\n                      apiVersion: v1\n                      fieldPath: status.podIP\n                - name: KUBERNETES_SERVICE_PORT\n                  value: \"6443\"\n                command:\n                  - cilium\n                  - install\n                  - --helm-set=ipam.mode=kubernetes\n                  - --set\n                  - kubeProxyReplacement=true\n                  - --helm-set=securityContext.capabilities.ciliumAgent={CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}\n                  - --helm-set=securityContext.capabilities.cleanCiliumState={NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}\n                  - --helm-set=cgroup.autoMount.enabled=false\n                  - --helm-set=cgroup.hostRoot=/sys/fs/cgroup\n                  - --helm-set=k8sServiceHost=localhost\n                  - --helm-set=k8sServicePort=7445\n                  - --helm-set=hubble.relay.enabled=true\n                  - --helm-set=hubble.ui.enabled=true\n                  - --helm-set=hubble.ui.ingress.enabled=true\n                  - --helm-set=hubble.ui.ingress.className=true\n                  - --helm-set=hubble.ui.ingress.hosts={hubble.cluster.cloudkoffer.dev}\nmachine:\n  network:\n    interfaces:\n      - interface: eth0\n        mtu: 1500\n        dhcp: true\n        # Configure virtual (shared) ip\n        # https://www.talos.dev/latest/talos-guides/network/vip/\n        vip:\n          ip: 192.168.1.101\n</code></pre> </li> <li> <p>Create talos client and machine configuration.</p> CLITerraform Shell<pre><code>talosctl gen config cloudkoffer https://192.168.1.101:6443 \\\n  --config-patch=\"@../patches/all.yaml\" \\\n  --config-patch-control-plane=\"@../patches/controlplane.yaml\" \\\n  --install-image=\"ghcr.io/siderolabs/installer:${TALOS_VERSION}\" \\\n  --kubernetes-version=\"${KUBERNETES_VERSION}\" \\\n  --with-docs=false \\\n  --with-examples=false \\\n  --with-secrets=secrets.yaml\n\nexport TALOSCONFIG=\"$(pwd)/talosconfig\"\ntalosctl config endpoint 192.168.1.1 192.168.1.2 192.168.1.3\ntalosctl config node 192.168.1.1\n</code></pre> File: variables.tf<pre><code>variable \"nodes\" {\n  description = \"A map of node data.\"\n  type = object({\n    controlplane = list(string)\n    worker       = list(string)\n  })\n  nullable = false\n}\n\nvariable \"kubernetes_version\" {\n  description = \"The kubernetes version for the Talos cluster.\"\n  type        = string\n  nullable    = false\n}\n</code></pre> File: main.tf<pre><code>data \"talos_client_configuration\" \"this\" {\n  client_configuration = talos_machine_secrets.this.client_configuration\n  cluster_name         = \"cloudkoffer\"\n  endpoints            = var.nodes.controlplane\n  nodes                = [var.nodes.controlplane[0]]\n}\n\ndata \"talos_machine_configuration\" \"controlplane\" {\n  cluster_endpoint = \"https://192.168.1.101:6443\"\n  cluster_name     = \"cloudkoffer\"\n  machine_secrets  = talos_machine_secrets.this.machine_secrets\n  machine_type     = \"controlplane\"\n\n  config_patches = [\n    file(\"../patches/controlplane.yaml\"),\n    file(\"../patches/all.yaml\"),\n  ]\n\n  docs               = false\n  examples           = false\n  kubernetes_version = var.kubernetes_version\n  talos_version      = talos_machine_secrets.this.talos_version\n}\n\ndata \"talos_machine_configuration\" \"worker\" {\n  cluster_endpoint = \"https://192.168.1.101:6443\"\n  cluster_name     = \"cloudkoffer\"\n  machine_secrets  = talos_machine_secrets.this.machine_secrets\n  machine_type     = \"worker\"\n\n  config_patches = [\n    file(\"../patches/all.yaml\"),\n  ]\n\n  docs               = false\n  examples           = false\n  kubernetes_version = var.kubernetes_version\n  talos_version      = talos_machine_secrets.this.talos_version\n}\n</code></pre> File: outputs.tf<pre><code>output \"talosconfig\" {\n  value     = data.talos_client_configuration.this.talos_config\n  sensitive = true\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> Shell<pre><code>terraform output -raw talosconfig &gt; talosconfig\nexport TALOSCONFIG=\"$(pwd)/talosconfig\"\n</code></pre> </li> <li> <p>Apply talos machine configuration.</p> CLITerraform Shell<pre><code>for node in \"${NODES_CONTROLPLANE[@]}\"; do\n  talosctl apply-config \\\n    --nodes=\"${node}\" \\\n    --file=controlplane.yaml \\\n    --insecure\ndone\n\nfor node in \"${NODES_WORKER[@]}\"; do\n  talosctl apply-config \\\n    --nodes=\"${node}\" \\\n    --file=worker.yaml \\\n    --insecure\ndone\n</code></pre> File: variables.tf<pre><code>variable \"nodes\" {\n  description = \"A map of node data.\"\n  type = object({\n    controlplane = list(string)\n    worker       = list(string)\n  })\n  nullable = false\n}\n</code></pre> File: main.tf<pre><code>resource \"talos_machine_configuration_apply\" \"controlplane\" {\n  for_each = toset(var.nodes.controlplane)\n\n  client_configuration        = talos_machine_secrets.this.client_configuration\n  machine_configuration_input = data.talos_machine_configuration.controlplane.machine_configuration\n  node                        = each.key\n}\n\nresource \"talos_machine_configuration_apply\" \"worker\" {\n  for_each = toset(var.nodes.worker)\n\n  client_configuration        = talos_machine_secrets.this.client_configuration\n  machine_configuration_input = data.talos_machine_configuration.worker.machine_configuration\n  node                        = each.key\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Bootstrap kubernetes cluster.</p> CLITerraform Shell<pre><code>talosctl bootstrap\n</code></pre> File: variables.tf<pre><code>variable \"nodes\" {\n  description = \"A map of node data.\"\n  type = object({\n    controlplane = list(string)\n    worker       = list(string)\n  })\n  nullable = false\n}\n</code></pre> File: main.tf<pre><code>resource \"talos_machine_bootstrap\" \"this\" {\n  client_configuration = talos_machine_secrets.this.client_configuration\n  node                 = var.nodes.controlplane[0]\n\n  depends_on = [\n    talos_machine_configuration_apply.controlplane,\n  ]\n}\n</code></pre> Shell<pre><code>terraform apply\n</code></pre> </li> <li> <p>Wait until cluster is healthy.</p> <p>Note for the Terraform workflow</p> <p>The <code>talosctl</code> CLI is required to carry out the following step. The installation steps can be found in the CLI tab of the Install and configure talosctl step.</p> Shell<pre><code>talosctl health\n</code></pre> </li> <li> <p>Retrieve kubeconfig.</p> CLITerraform Shell<pre><code>talosctl kubeconfig kubeconfig\nexport KUBECONFIG=\"$(pwd)/kubeconfig\"\n</code></pre> Shell<pre><code>terraform output -raw kubeconfig_raw &gt; kubeconfig\nexport KUBECONFIG=\"$(pwd)/kubeconfig\"\n</code></pre> </li> </ul>"},{"location":"provisioning/kubernetes/talos/#maintenance-steps","title":"Maintenance Steps","text":"Shell<pre><code>export TALOSCONFIG=\"$(pwd)/talosconfig\"\nexport KUBECONFIG=\"$(pwd)/kubeconfig\"\n</code></pre> <ul> <li> <p>Upgrade Talos.</p> <p>Info</p> <p>Perform the upgrade one by one for each node.</p> Shell<pre><code>TALOS_VERSION=v1.7.4\n\ntalosctl upgrade \\\n  --image=\"ghcr.io/siderolabs/installer:${TALOS_VERSION}\" \\\n  --nodes=192.168.1.x\n</code></pre> </li> <li> <p>Stage-Upgrade Talos.</p> <p>Tip</p> <p>Use if the above upgrade fails due to a process holding a file open on disk.</p> Shell<pre><code>TALOS_VERSION=v1.7.4\n\ntalosctl upgrade \\\n  --image=\"ghcr.io/siderolabs/installer:${TALOS_VERSION}\" \\\n  --nodes=192.168.1.x \\\n  --stage\n\ntalosctl reboot \\\n  --nodes=192.168.1.x \\\n  --wait\n</code></pre> </li> <li> <p>Upgrade Kubernetes.</p> Shell<pre><code>KUBERNETES_VERSION=1.30.1\n\ntalosctl upgrade-k8s \\\n  --to=\"${KUBERNETES_VERSION}\"\n</code></pre> </li> </ul>"},{"location":"provisioning/network/router/","title":"Router","text":""},{"location":"provisioning/network/router/#router","title":"Router","text":""},{"location":"provisioning/network/router/#roles","title":"Roles","text":"<ul> <li>Router</li> <li>DHCP Server</li> <li>DNS Server</li> <li>Boot Server (PXE/TFTP)</li> </ul>"},{"location":"provisioning/network/router/#target-state","title":"Target State","text":"Property Value Subnet 192.168.1.0/24 Dynamic DHCP Range 192.168.1.51 - 192.168.1.100 Static DCHP Range 192.168.1.1 - 192.168.1.50 Router 192.168.1.254 DNS Server 192.168.1.254 Boot Server 192.168.1.254 Domain Name case.local Host MappingCloudkoffer v1 / v2 / v3Cloudkoffer v2 / v3Cloudkoffer v3 kube: 192.168.1.101node1: 192.168.1.1node2: 192.168.1.2node3: 192.168.1.3node4: 192.168.1.4node5: 192.168.1.5node6: 192.168.1.6node7: 192.168.1.7node8: 192.168.1.8node9: 192.168.1.9node10: 192.168.1.10switch: 192.168.1.253 Upstream DNS Server 8.8.8.8, 1.1.1.1, 9.9.9.9"},{"location":"provisioning/network/router/#network-boot","title":"Network Boot","text":"Network Boot State Diagram Network Boot Sequence Diagram"},{"location":"provisioning/network/router/#configuration","title":"Configuration","text":""},{"location":"provisioning/network/router/#reset-to-factory-defaults","title":"Reset to Factory Defaults","text":"<p>To configure the router freshly, it must be reset first. This can be done via a switch on the back of the router. More detailed information can be found in the support article EdgeRouter - Reset to Factory Defaults. After resetting, a static IP address must be configured on the client, which configures the router. Any address from the <code>192.168.1.0/24</code> subnet can be selected, although the router itself already uses <code>192.168.1.1</code>. The initial username and the initial password are both <code>ubnt</code>.</p>"},{"location":"provisioning/network/router/#firmware","title":"Firmware","text":"<p>Currently the firmware version <code>v2.0.9-hotfix.7.5622731</code> is in use. The latest firmware can be checked and downloaded from the Ubiquiti Download Portal. It is then possible to apply it via the web UI.</p> <ul> <li>192.168.1.1 (initial), 192.168.1.254 (configured)</li> <li>System &gt; Upgrade System Image</li> </ul>"},{"location":"provisioning/network/router/#ui-configurations","title":"UI Configurations","text":"<ul> <li>192.168.1.1 (initial), 192.168.1.254 (configured)</li> <li>Wizards &gt; Setup Wizards &gt; Basic Setup<ul> <li>DNS forwarding: <code>Use fast public DNS servers</code></li> <li>LAN ports &gt; Address: <code>192.168.1.254</code> / <code>255.255.255.0</code></li> <li>User setup: <code>Keep existing user</code></li> </ul> </li> </ul>"},{"location":"provisioning/network/router/#cli-configurations","title":"CLI Configurations","text":"<ul> <li> <p>Connect to the router via ssh.</p> <pre><code>ssh ubnt@192.168.1.254\n</code></pre> </li> <li> <p>Download the latest iPXE image.</p> <pre><code>sudo mkdir -p /var/lib/tftpboot\nsudo curl -s http://boot.ipxe.org/ipxe.efi -o /var/lib/tftpboot/ipxe.efi\n</code></pre> </li> <li> <p>Create iPXE boot config.</p> <pre><code>sudo vi /var/lib/tftpboot/boot.ipxe\n</code></pre> File: boot.ipxe<pre><code>#!ipxe\n\nset menu-timeout 10000\nisset ${menu-default} || set menu-default talos\n\n:start\nmenu install menu\nitem --key t talos  Talos\nitem --key r reset  Reset Talos\nitem --gap\nitem --key c config Configure settings\nitem --key s shell  Drop to iPXE shell\nitem --key b reboot Reboot node\nitem --gap\nitem --key x exit   Exit iPXE and continue UEFI boot\nchoose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel\nset menu-timeout 0\ngoto ${selected}\n\n:talos\ninitrd /initramfs-amd64.xz\nkernel /vmlinuz-amd64 initrd=initramfs-amd64.xz earlyprintk=ttyS0 console=ttyS0 console=tty0 init_on_alloc=1 init_on_free=1 slab_nomerge pti=on consoleblank=0 nvme_core.io_timeout=4294967295 printk.devkmsg=on ima_template=ima-ng ima_appraise=fix ima_hash=sha512 talos.platform=metal\nboot || goto failed\n\n:reset\ninitrd /initramfs-amd64.xz\nkernel /vmlinuz-amd64 initrd=initramfs-amd64.xz earlyprintk=ttyS0 console=ttyS0 console=tty0 init_on_alloc=1 init_on_free=1 slab_nomerge pti=on consoleblank=0 nvme_core.io_timeout=4294967295 printk.devkmsg=on ima_template=ima-ng ima_appraise=fix ima_hash=sha512 talos.platform=metal talos.experimental.wipe=system\nboot || goto failed\n\n:cancel\necho You cancelled the menu, dropping you to a shell\n\n:shell\necho Type 'exit' to get the back to the menu\nshell\nset menu-timeout 0\ngoto start\n\n:failed\necho Booting failed, dropping to shell\ngoto shell\n\n:reboot\nreboot\n\n:exit\nexit\n\n:config\nconfig\ngoto start\n</code></pre> </li> <li> <p>Download the latest talos linux image.</p> <pre><code>TALOS_VERSION=v1.7.4\nBASE_URL=\"https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}\"\nsudo curl -sL \"${BASE_URL}/initramfs-amd64.xz\" -o /var/lib/tftpboot/initramfs-amd64.xz\nsudo curl -sL \"${BASE_URL}/vmlinuz-amd64\" -o /var/lib/tftpboot/vmlinuz-amd64\n</code></pre> </li> <li> <p>Configure the router.</p> <pre><code>configure\n</code></pre> <pre><code># Configure DHCP server settings\ndelete service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 start\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 start 192.168.1.51 stop 192.168.1.100\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 domain-name case.local\n\n# Replace ISC DHCP with Dnsmasq to add DNS and PXE/TFTP server capabilities\nset service dhcp-server use-dnsmasq enable\n\n# Extend DNS cache size for better performance (default is 150)\nset service dns forwarding cache-size 1000\n\n# Use fast public DNS servers to forward requests\nset service dns forwarding name-server 8.8.8.8\nset service dns forwarding name-server 1.1.1.1\nset service dns forwarding name-server 9.9.9.9\n\n# Enable PXE/TFTP\nset service dns forwarding options \"enable-tftp\"\nset service dns forwarding options \"tftp-root=/var/lib/tftpboot\"\n\n# Configure iPXE - chainload boot script\nset service dns forwarding options \"dhcp-boot=ipxe.efi\"\nset service dns forwarding options \"dhcp-userclass=set:ipxe,iPXE\"\nset service dns forwarding options \"dhcp-boot=tag:ipxe,boot.ipxe\"\n\n# Disable proxy DHCP (175 for iPXE; 176 for no-pxedhcp; 1b for 1 byte)\nset service dns forwarding options \"dhcp-option=encap:175, 176, 1b\"\n\n# Disable UNMS\nset service unms disable\n\n# Disable IPv6\nset system ipv6 disable\n\n# Configure static host mapping\nset system static-host-mapping host-name router.case.local inet 192.168.1.254\nset system static-host-mapping host-name router.case.local alias router\nset system static-host-mapping host-name kube.case.local inet 192.168.1.101\nset system static-host-mapping host-name kube.case.local alias kube\n\n# Allow the router to resolve the FQDNs of hosts using just the shortnames\nset system domain-name case.local\n</code></pre> Cloudkoffer v1Cloudkoffer v2Cloudkoffer v3 <pre><code># DHCP - static host mappings\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 ip-address 192.168.1.1\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 mac-address f4:4d:30:60:70:42\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 ip-address 192.168.1.2\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 mac-address f4:4d:30:60:68:db\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 ip-address 192.168.1.3\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 mac-address f4:4d:30:60:6c:9c\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 ip-address 192.168.1.4\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 mac-address f4:4d:30:60:6d:0d\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 ip-address 192.168.1.5\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 mac-address f4:4d:30:60:70:62\n</code></pre> <pre><code># DHCP - static host mappings\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 ip-address 192.168.1.1\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 mac-address 00:1f:c6:9c:1c:a0\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 ip-address 192.168.1.2\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 mac-address 00:1f:c6:9c:1a:b0\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 ip-address 192.168.1.3\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 mac-address 00:1f:c6:9c:1c:fe\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 ip-address 192.168.1.4\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 mac-address 00:1f:c6:9c:1a:ac\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 ip-address 192.168.1.5\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 mac-address 00:1f:c6:9c:1a:ae\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-6 ip-address 192.168.1.6\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-6 mac-address 00:1f:c6:9c:1c:60\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-7 ip-address 192.168.1.7\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-7 mac-address 00:1f:c6:9c:1a:b1\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-8 ip-address 192.168.1.8\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-8 mac-address 00:1f:c6:9c:1c:64\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-9 ip-address 192.168.1.9\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-9 mac-address 00:1f:c6:9c:1c:8d\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-10 ip-address 192.168.1.10\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-10 mac-address 00:1f:c6:9c:1c:5a\n</code></pre> <pre><code># DHCP - static host mappings\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping switch ip-address 192.168.1.253\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping switch mac-address a0:04:60:08:f7:9f\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 ip-address 192.168.1.1\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-1 mac-address 00:1f:c6:9c:8b:2d\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 ip-address 192.168.1.2\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-2 mac-address 00:1f:c6:9c:86:8f\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 ip-address 192.168.1.3\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-3 mac-address 00:1f:c6:9d:09:08\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 ip-address 192.168.1.4\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-4 mac-address 00:1f:c6:9c:8a:20\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 ip-address 192.168.1.5\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-5 mac-address 00:1f:c6:9c:89:ca\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-6 ip-address 192.168.1.6\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-6 mac-address 00:1f:c6:9c:90:a7\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-7 ip-address 192.168.1.7\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-7 mac-address 00:1f:c6:9c:89:d7\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-8 ip-address 192.168.1.8\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-8 mac-address 00:1f:c6:9c:8f:f2\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-9 ip-address 192.168.1.9\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-9 mac-address 00:1f:c6:9c:92:a0\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-10 ip-address 192.168.1.10\nset service dhcp-server shared-network-name LAN subnet 192.168.1.0/24 static-mapping node-10 mac-address 00:1f:c6:9c:91:e6\n</code></pre> </li> <li> <p>Persist the configuration and reboot.</p> <pre><code>commit ; save\nexit\nreboot\n</code></pre> </li> </ul> <p>Info</p> <p>The dhcp, dns and tftp server is then active. The static IP address on the client that configured the router should now be swapped for a dynamic one.</p>"},{"location":"provisioning/network/router/#maintenance","title":"Maintenance","text":"<ul> <li> <p>Upgrade Talos <code>vmlinux</code> and <code>initramfs</code>.</p> <pre><code>ssh ubnt@192.168.1.254\n</code></pre> <pre><code>TALOS_VERSION=v1.7.4\nBASE_URL=\"https://github.com/siderolabs/talos/releases/download/${TALOS_VERSION}\"\nsudo curl -sL \"${BASE_URL}/initramfs-amd64.xz\" -o /var/lib/tftpboot/initramfs-amd64.xz\nsudo curl -sL \"${BASE_URL}/vmlinuz-amd64\" -o /var/lib/tftpboot/vmlinuz-amd64\n</code></pre> </li> <li> <p>Switch default boot menu entry.</p> <ul> <li> <p>Connect to router.</p> <pre><code>ssh ubnt@192.168.1.254\n</code></pre> </li> <li> <p>Open file <code>boot.ipxe</code>.</p> <pre><code>sudo vi /var/lib/tftpboot/boot.ipxe\n</code></pre> </li> <li> <p>Switch menu default to <code>talos</code> or <code>reset</code> (line 4).</p> <pre><code># Boot into talos operating system.\nisset ${menu-default} || set menu-default talos\n\n# Wipe disk and boot into talos maintenance mode.\nisset ${menu-default} || set menu-default reset\n</code></pre> </li> <li> <p>Exit from router.</p> <pre><code>exit\n</code></pre> </li> </ul> </li> <li> <p>Show active configuration</p> <pre><code>ssh ubnt@192.168.1.254\n</code></pre> <pre><code>show configuration | no-more\n</code></pre> <pre><code>exit\n</code></pre> </li> </ul>"},{"location":"provisioning/network/router/#useful-links","title":"Useful links","text":"<ul> <li>EdgeRouter - DNS Forwarding Setup and Options</li> <li>EdgeRouter - DHCP Server Using Dnsmasq</li> </ul>"},{"location":"provisioning/stack/connectivity/","title":"Connectivity","text":""},{"location":"provisioning/stack/connectivity/#metallb","title":"metallb","text":""},{"location":"provisioning/stack/connectivity/#ingress-nginx","title":"ingress-nginx","text":""},{"location":"provisioning/stack/connectivity/#cert-manager","title":"cert-manager","text":""},{"location":"provisioning/stack/connectivity/#external-dns","title":"external-dns","text":""},{"location":"provisioning/stack/connectivity/#_1","title":"Connectivity","text":""},{"location":"provisioning/stack/games/","title":"Games","text":""},{"location":"provisioning/stack/games/#kubeinvaders","title":"kubeinvaders","text":"<ul> <li>https://github.com/lucky-sideburn/kubeinvaders</li> </ul>"},{"location":"provisioning/stack/games/#kubedoom","title":"kubedoom","text":"<ul> <li>https://github.com/storax/kubedoom</li> </ul>"},{"location":"provisioning/stack/observability/","title":"Observability","text":""},{"location":"provisioning/stack/observability/#kube-prometheus-stack","title":"kube-prometheus-stack","text":""},{"location":"provisioning/stack/observability/#kubernetes-event-exporter","title":"kubernetes-event-exporter","text":""},{"location":"provisioning/stack/observability/#loki","title":"loki","text":""},{"location":"provisioning/stack/observability/#promtail","title":"promtail","text":""},{"location":"provisioning/stack/observability/#tempo","title":"tempo","text":""},{"location":"provisioning/stack/observability/#kubernetes-dashboard","title":"kubernetes-dashboard","text":""},{"location":"provisioning/stack/observability/#vertical-pod-autosacler","title":"vertical-pod-autosacler","text":""},{"location":"provisioning/stack/observability/#goldilocks","title":"goldilocks","text":""},{"location":"provisioning/stack/observability/#weave-gitops","title":"weave-gitops","text":""},{"location":"provisioning/stack/security/","title":"Security","text":""},{"location":"provisioning/stack/security/#external-secrets","title":"external-secrets","text":""},{"location":"provisioning/stack/security/#kyverno","title":"kyverno","text":""},{"location":"provisioning/stack/security/#sealed-secrets","title":"sealed-secrets","text":""},{"location":"provisioning/stack/security/#trivy-operator","title":"trivy-operator","text":""},{"location":"provisioning/stack/storage/","title":"Storage","text":""},{"location":"updates/","title":"Updates","text":""},{"location":"updates/2017/01/01/cloudkoffer-v1/","title":"Cloudkoffer v1","text":""},{"location":"updates/2018/01/01/cloudkoffer-v2/","title":"Cloudkoffer v2","text":""},{"location":"updates/2020/01/01/cloudkoffer-v3/","title":"Cloudkoffer v3","text":""},{"location":"updates/2023/01/01/talos/","title":"Talos","text":""},{"location":"updates/2023/01/02/flux/","title":"Flux","text":""},{"location":"updates/archive/2023/","title":"2023","text":""},{"location":"updates/archive/2020/","title":"2020","text":""},{"location":"updates/archive/2018/","title":"2018","text":""},{"location":"updates/archive/2017/","title":"2017","text":""},{"location":"updates/category/gitops/","title":"GitOps","text":""},{"location":"updates/category/kubernetes/","title":"Kubernetes","text":""},{"location":"updates/category/cloudkoffer/","title":"Cloudkoffer","text":""}]}